{{>layouts/header}}

<h1>Stream Viewer</h1>
<img id="stream" src="http://175.123.202.85:20800/stream.mjpg" alt="Stream not available">

<h1>UDP Streaming</h1>
<div>
    <button onclick="fetchSensorData()">Get Sensor Data</button>
    <button onclick="fetchActuatorData()">Get Actuator Data</button>
    <button onclick="fetchScreenshot()">Capture Screenshot</button>
</div>

<div id="sensorData"></div>
<div id="actuatorData"></div>
<img id="screenshotImg" src="" alt="Screenshot" style="display: none;">

<script>
    const ipAddress = "175.123.202.85";
    const port = 20920;

//센서 데이터 버튼 클릭
function fetchSensorData() {
    const url = `/udp/sensor?ipAddress=${ipAddress}&port=${port}&dataType=0`;
    fetchAndDisplayData(url, 'sensorData', 'Sensor');
}

//엑추 데이터 버튼 클릭
function fetchActuatorData() {
    const url = `/udp/actuator?ipAddress=${ipAddress}&port=${port}&dataType=1`;
    fetchAndDisplayData(url, 'actuatorData', 'Actuator');
}

function fetchAndDisplayData(url, containerId, dataTypeName) {
    fetch(url)
        .then(response => response.json())
        .then(data => {
            const container = document.getElementById(containerId);
            container.textContent = JSON.stringify(data);

            // 데이터 유형을 출력
            const dataTypeInfo = document.createElement('p');
            dataTypeInfo.textContent = `${dataTypeName} Data`;
            container.prepend(dataTypeInfo);
        })
        .catch(error => console.error(`Error fetching ${containerId} data:`, error));
}

    function fetchScreenshot() {
        fetch('/udp/screenshot')
            .then(response => response.text())
            .then(data => {
                const screenshotImg = document.getElementById('screenshotImg');
                screenshotImg.src = `data:image/jpeg;base64,${data}`;
                screenshotImg.style.display = 'inline-block';
            })
            .catch(error => console.error('Error fetching screenshot:', error));
    }
</script>

{{>layouts/footer}}